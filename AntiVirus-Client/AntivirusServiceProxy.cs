namespace ServiceReference1
{
    using System.Runtime.Serialization;
    using System;
    using System.ServiceModel;
    //------------------------------------------------------------------------------
    // <auto-generated>
    //     This code was generated by a tool.
    //     Runtime Version:4.0.30319.42000
    //
    //     Changes to this file may cause incorrect behavior and will be lost if
    //     the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------

    namespace AntiVirusDLL
    {
        using System.Runtime.Serialization;


        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name = "Task", Namespace = "http://schemas.datacontract.org/2004/07/AntiVirusDLL")]
        public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject
        {

            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

            private System.DateTime DateField;

            private int FilesScannedField;

            private int FilesTotalField;

            private int IdField;

            private bool IsActiveField;

            private AntiVirusDLL.TaskOption OptionField;

            private string PathField;

            private double ProgressField;

            private AntiVirusDLL.TaskType TypeField;

            private AntiVirusDLL.Virus[] VirusFoundField;

            public System.Runtime.Serialization.ExtensionDataObject ExtensionData
            {
                get
                {
                    return this.extensionDataField;
                }
                set
                {
                    this.extensionDataField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DateTime Date
            {
                get
                {
                    return this.DateField;
                }
                set
                {
                    this.DateField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public int FilesScanned
            {
                get
                {
                    return this.FilesScannedField;
                }
                set
                {
                    this.FilesScannedField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public int FilesTotal
            {
                get
                {
                    return this.FilesTotalField;
                }
                set
                {
                    this.FilesTotalField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public int Id
            {
                get
                {
                    return this.IdField;
                }
                set
                {
                    this.IdField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsActive
            {
                get
                {
                    return this.IsActiveField;
                }
                set
                {
                    this.IsActiveField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public AntiVirusDLL.TaskOption Option
            {
                get
                {
                    return this.OptionField;
                }
                set
                {
                    this.OptionField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Path
            {
                get
                {
                    return this.PathField;
                }
                set
                {
                    this.PathField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public double Progress
            {
                get
                {
                    return this.ProgressField;
                }
                set
                {
                    this.ProgressField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public AntiVirusDLL.TaskType Type
            {
                get
                {
                    return this.TypeField;
                }
                set
                {
                    this.TypeField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public AntiVirusDLL.Virus[] VirusFound
            {
                get
                {
                    return this.VirusFoundField;
                }
                set
                {
                    this.VirusFoundField = value;
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name = "TaskOption", Namespace = "http://schemas.datacontract.org/2004/07/AntiVirusDLL")]
        public enum TaskOption : int
        {

            [System.Runtime.Serialization.EnumMemberAttribute()]
            Nothing = 0,

            [System.Runtime.Serialization.EnumMemberAttribute()]
            Quarntine = 1,

            [System.Runtime.Serialization.EnumMemberAttribute()]
            Delete = 2,
        }

        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name = "TaskType", Namespace = "http://schemas.datacontract.org/2004/07/AntiVirusDLL")]
        public enum TaskType : int
        {

            [System.Runtime.Serialization.EnumMemberAttribute()]
            Scan = 0,

            [System.Runtime.Serialization.EnumMemberAttribute()]
            Monitor = 1,

            [System.Runtime.Serialization.EnumMemberAttribute()]
            SchedualScan = 2,
        }

        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name = "Virus", Namespace = "http://schemas.datacontract.org/2004/07/AntiVirusDLL")]
        public partial class Virus : object, System.Runtime.Serialization.IExtensibleDataObject
        {

            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

            private bool InQuarantineField;

            private string NameField;

            private string PathField;

            public System.Runtime.Serialization.ExtensionDataObject ExtensionData
            {
                get
                {
                    return this.extensionDataField;
                }
                set
                {
                    this.extensionDataField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool InQuarantine
            {
                get
                {
                    return this.InQuarantineField;
                }
                set
                {
                    this.InQuarantineField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Name
            {
                get
                {
                    return this.NameField;
                }
                set
                {
                    this.NameField = value;
                }
            }

            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Path
            {
                get
                {
                    return this.PathField;
                }
                set
                {
                    this.PathField = value;
                }
            }
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IAntivirusService")]
    public interface IAntivirusService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/Start", ReplyAction = "http://tempuri.org/IAntivirusService/StartResponse")]
        void Start();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/Start", ReplyAction = "http://tempuri.org/IAntivirusService/StartResponse")]
        System.Threading.Tasks.Task StartAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/GetTasks", ReplyAction = "http://tempuri.org/IAntivirusService/GetTasksResponse")]
        AntiVirusDLL.Task[] GetTasks();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/GetTasks", ReplyAction = "http://tempuri.org/IAntivirusService/GetTasksResponse")]
        System.Threading.Tasks.Task<AntiVirusDLL.Task[]> GetTasksAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/GetActiveTasks", ReplyAction = "http://tempuri.org/IAntivirusService/GetActiveTasksResponse")]
        AntiVirusDLL.Task[] GetActiveTasks();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/GetActiveTasks", ReplyAction = "http://tempuri.org/IAntivirusService/GetActiveTasksResponse")]
        System.Threading.Tasks.Task<AntiVirusDLL.Task[]> GetActiveTasksAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/StopTask", ReplyAction = "http://tempuri.org/IAntivirusService/StopTaskResponse")]
        bool StopTask(AntiVirusDLL.Task task);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/StopTask", ReplyAction = "http://tempuri.org/IAntivirusService/StopTaskResponse")]
        System.Threading.Tasks.Task<bool> StopTaskAsync(AntiVirusDLL.Task task);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/GetVirusesFound", ReplyAction = "http://tempuri.org/IAntivirusService/GetVirusesFoundResponse")]
        AntiVirusDLL.Virus[] GetVirusesFound(AntiVirusDLL.Task task);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/GetVirusesFound", ReplyAction = "http://tempuri.org/IAntivirusService/GetVirusesFoundResponse")]
        System.Threading.Tasks.Task<AntiVirusDLL.Virus[]> GetVirusesFoundAsync(AntiVirusDLL.Task task);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/MoveToQuarantineVirus", ReplyAction = "http://tempuri.org/IAntivirusService/MoveToQuarantineVirusResponse")]
        bool MoveToQuarantineVirus(AntiVirusDLL.Task task, AntiVirusDLL.Virus virus, bool MoveBack);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/MoveToQuarantineVirus", ReplyAction = "http://tempuri.org/IAntivirusService/MoveToQuarantineVirusResponse")]
        System.Threading.Tasks.Task<bool> MoveToQuarantineVirusAsync(AntiVirusDLL.Task task, AntiVirusDLL.Virus virus, bool MoveBack);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/DeleteVirus", ReplyAction = "http://tempuri.org/IAntivirusService/DeleteVirusResponse")]
        bool DeleteVirus(AntiVirusDLL.Task task, AntiVirusDLL.Virus virus);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/DeleteVirus", ReplyAction = "http://tempuri.org/IAntivirusService/DeleteVirusResponse")]
        System.Threading.Tasks.Task<bool> DeleteVirusAsync(AntiVirusDLL.Task task, AntiVirusDLL.Virus virus);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/AddNewTask", ReplyAction = "http://tempuri.org/IAntivirusService/AddNewTaskResponse")]
        bool AddNewTask(AntiVirusDLL.Task task);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAntivirusService/AddNewTask", ReplyAction = "http://tempuri.org/IAntivirusService/AddNewTaskResponse")]
        System.Threading.Tasks.Task<bool> AddNewTaskAsync(AntiVirusDLL.Task task);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAntivirusServiceChannel : IAntivirusService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AntivirusServiceClient : System.ServiceModel.ClientBase<IAntivirusService>, IAntivirusService
    {

        public AntivirusServiceClient()
        {
        }

        public AntivirusServiceClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public AntivirusServiceClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public AntivirusServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public AntivirusServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public void Start()
        {
            base.Channel.Start();
        }

        public System.Threading.Tasks.Task StartAsync()
        {
            return base.Channel.StartAsync();
        }

        public AntiVirusDLL.Task[] GetTasks()
        {
            return base.Channel.GetTasks();
        }

        public System.Threading.Tasks.Task<AntiVirusDLL.Task[]> GetTasksAsync()
        {
            return base.Channel.GetTasksAsync();
        }

        public AntiVirusDLL.Task[] GetActiveTasks()
        {
            return base.Channel.GetActiveTasks();
        }

        public System.Threading.Tasks.Task<AntiVirusDLL.Task[]> GetActiveTasksAsync()
        {
            return base.Channel.GetActiveTasksAsync();
        }

        public bool StopTask(AntiVirusDLL.Task task)
        {
            return base.Channel.StopTask(task);
        }

        public System.Threading.Tasks.Task<bool> StopTaskAsync(AntiVirusDLL.Task task)
        {
            return base.Channel.StopTaskAsync(task);
        }

        public AntiVirusDLL.Virus[] GetVirusesFound(AntiVirusDLL.Task task)
        {
            return base.Channel.GetVirusesFound(task);
        }

        public System.Threading.Tasks.Task<AntiVirusDLL.Virus[]> GetVirusesFoundAsync(AntiVirusDLL.Task task)
        {
            return base.Channel.GetVirusesFoundAsync(task);
        }

        public bool MoveToQuarantineVirus(AntiVirusDLL.Task task, AntiVirusDLL.Virus virus, bool MoveBack)
        {
            return base.Channel.MoveToQuarantineVirus(task, virus, MoveBack);
        }

        public System.Threading.Tasks.Task<bool> MoveToQuarantineVirusAsync(AntiVirusDLL.Task task, AntiVirusDLL.Virus virus, bool MoveBack)
        {
            return base.Channel.MoveToQuarantineVirusAsync(task, virus, MoveBack);
        }

        public bool DeleteVirus(AntiVirusDLL.Task task, AntiVirusDLL.Virus virus)
        {
            return base.Channel.DeleteVirus(task, virus);
        }

        public System.Threading.Tasks.Task<bool> DeleteVirusAsync(AntiVirusDLL.Task task, AntiVirusDLL.Virus virus)
        {
            return base.Channel.DeleteVirusAsync(task, virus);
        }

        public bool AddNewTask(AntiVirusDLL.Task task)
        {
            return base.Channel.AddNewTask(task);
        }

        public System.Threading.Tasks.Task<bool> AddNewTaskAsync(AntiVirusDLL.Task task)
        {
            return base.Channel.AddNewTaskAsync(task);
        }
    }



}
